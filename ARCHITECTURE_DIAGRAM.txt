```
┌─────────────────────────────────────────────────────────────────────────────┐
│                     MEETING AGENT v2.0 - ARCHITECTURE                       │
└─────────────────────────────────────────────────────────────────────────────┘

                              User Query
                                  │
                                  ▼
                    ┌─────────────────────────┐
                    │    agent/api.py         │
                    │  _should_use_langgraph? │
                    └─────────────────────────┘
                              │
                ┌─────────────┴─────────────┐
                │                           │
        YES (v2.0 enabled)            NO (legacy mode)
                │                           │
                ▼                           ▼
┌───────────────────────────────┐   ┌──────────────────────────┐
│   🆕 LANGGRAPH v2.0           │   │  🗂️  LEGACY              │
│   agent/graph/                │   │  agent/legacy/           │
│                               │   │                          │
│  ┌─────────────────────┐     │   │  ┌────────────────────┐  │
│  │ 1. parse_and        │     │   │  │ planner.py         │  │
│  │    _understand      │◄────┼───┼──│ (heuristic-based)  │  │
│  │    (LLM)            │     │   │  │                    │  │
│  └──────────┬──────────┘     │   │  │ - Regex patterns  │  │
│             ▼                │   │  │ - Fixed templates │  │
│  ┌─────────────────────┐     │   │  │ - No iteration    │  │
│  │ 2. analyze_context  │     │   │  └────────────────────┘  │
│  │    (DB + LLM)       │     │   │                          │
│  └──────────┬──────────┘     │   │  Used when:              │
│             ▼                │   │  • USE_LANGGRAPH=false   │
│  ┌─────────────────────┐     │   │  • API key missing       │
│  │ 3. detect_intent    │     │   │  • LangGraph errors      │
│  │    (LLM)            │     │   │    (if fallback=true)    │
│  └──────────┬──────────┘     │   └──────────────────────────┘
│             ▼                │
│  ┌─────────────────────┐     │
│  │ 4. retrieve_facts   │     │
│  │    (Multi-strategy  │     │
│  │     + LLM ranking)  │     │
│  └──────────┬──────────┘     │
│             ▼                │
│  ┌─────────────────────┐     │
│  │ 5. generate_macro   │     │
│  │    _summary (LLM)   │     │
│  └──────────┬──────────┘     │
│             ▼                │
│  ┌─────────────────────┐     │
│  │ 6. build_agenda     │     │
│  │    (LLM +           │     │
│  │     templates)      │     │
│  └──────────┬──────────┘     │
│             ▼                │
│  ┌─────────────────────┐     │
│  │ 7. review_quality   │     │
│  │    (LLM)            │     │
│  └──────────┬──────────┘     │
│             ▼                │
│      ┌──────────────┐        │
│      │ Quality OK?  │        │
│      └──────┬───────┘        │
│             │                │
│      ┌──────┴───────┐        │
│      │              │        │
│   NO (< 0.7)     YES (≥ 0.7) │
│      │              │        │
│      │(max 2x)      ▼        │
│      │    ┌─────────────┐    │
│      └────┤ 8. finalize │    │
│           │    _agenda  │    │
│           └──────┬──────┘    │
└──────────────────┼───────────┘
                   │
                   ▼
         ┌─────────────────┐
         │  Agenda JSON    │
         │  + Metadata v2  │
         └─────────────────┘


┌─────────────────────────────────────────────────────────────────────────────┐
│                          DIRECTORY STRUCTURE                                │
└─────────────────────────────────────────────────────────────────────────────┘

meeting-agent/
├── agent/
│   ├── graph/              ← 🆕 LangGraph v2.0 (NEW CODE)
│   │   ├── state.py        ← AgendaState TypedDict
│   │   ├── nodes.py        ← 8 workflow nodes (600+ lines)
│   │   ├── graph.py        ← StateGraph definition
│   │   └── prompts.py      ← LLM prompt templates
│   │
│   ├── intent/             ← 🆕 Intent Templates (NEW CODE)
│   │   └── templates.py    ← 6 intents × 2 languages
│   │
│   ├── retrieval/          ← 🆕 Multi-Strategy (NEW CODE)
│   │   └── multi_strategy.py
│   │
│   ├── legacy/             ← 🗂️ Pre-v2.0 Code (ARCHIVED)
│   │   ├── planner.py      ← Original macro planner
│   │   ├── planner_v3.py   ← Experimental intent planner
│   │   ├── intent.py       ← Heuristic intent detection
│   │   └── text_quality.py ← Text extraction
│   │
│   ├── api.py              ← Routes to v2.0 OR legacy
│   ├── agenda.py           ← High-level API (uses legacy)
│   ├── config.py           ← Feature flags
│   ├── db.py               ← Database (shared)
│   └── retrieval.py        ← Core retrieval (shared)
│
├── scripts/
│   └── compare_planners.py ← Side-by-side testing
│
├── LANGGRAPH_SETUP.md      ← Quick start guide
├── ARCHITECTURE.md         ← Code structure
├── IMPLEMENTATION_COMPLETE.md ← This summary
└── README.md               ← Updated with v2.0


┌─────────────────────────────────────────────────────────────────────────────┐
│                         FEATURE FLAGS & ROLLOUT                             │
└─────────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────┬────────────┬─────────────────────────────────────┐
│ Variable                 │ Default    │ Effect                              │
├──────────────────────────┼────────────┼─────────────────────────────────────┤
│ USE_LANGGRAPH_AGENDA     │ false      │ Enable LangGraph v2.0               │
│ LANGGRAPH_ORGS           │ null       │ Whitelist orgs (comma-separated)    │
│ LANGGRAPH_FALLBACK_LEGACY│ true       │ Fallback to legacy on errors        │
│ ANTHROPIC_API_KEY        │ (required) │ Claude API key for LLM calls        │
└──────────────────────────┴────────────┴─────────────────────────────────────┘


┌─────────────────────────────────────────────────────────────────────────────┐
│                      RESPONSE FORMAT COMPARISON                             │
└─────────────────────────────────────────────────────────────────────────────┘

LEGACY OUTPUT:                     v2.0 OUTPUT:
┌────────────────────────┐         ┌──────────────────────────────────┐
│ {                      │         │ {                                │
│   "proposal": {...},   │         │   "proposal": {...},             │
│   "subject": "..."     │         │   "subject": "...",              │
│ }                      │         │   "metadata": {                  │
│                        │         │     "version": "2.0",            │
│                        │         │     "generator": "langgraph",    │
│                        │         │     "quality_score": 0.85,       │
│                        │         │     "intent": "decision_making", │
│                        │         │     "intent_confidence": 0.92,   │
│                        │         │     "refinement_count": 0,       │
│                        │         │     "step_times": {...},         │
│                        │         │     "retrieval_stats": {...},    │
│                        │         │     "errors": []                 │
│                        │         │   }                              │
│                        │         │ }                                │
└────────────────────────┘         └──────────────────────────────────┘
      ~500ms latency                      ~8-12s latency
      $0 cost                             ~$0.10 cost
      Heuristic-based                     LLM-powered
      No quality gates                    Quality score + refinement


┌─────────────────────────────────────────────────────────────────────────────┐
│                            TESTING COMMANDS                                 │
└─────────────────────────────────────────────────────────────────────────────┘

# Enable v2.0
export ANTHROPIC_API_KEY="sk-ant-..."
export USE_LANGGRAPH_AGENDA="true"

# Test via API
curl -X POST http://localhost:8000/agenda/plan-nl \
  -H "Content-Type: application/json" \
  -d '{"text": "faça a pauta da minha próxima reunião com a BYD"}'

# Compare both planners
python scripts/compare_planners.py "próxima reunião com a BYD"

# Check if v2.0 is active
# Look for: "metadata": {"generator": "langgraph", ...}


┌─────────────────────────────────────────────────────────────────────────────┐
│                              STATUS: ✅ COMPLETE                            │
└─────────────────────────────────────────────────────────────────────────────┘

All code separated, documented, and ready for testing!
```
